{%- if flavor contains "typescript" -%}
import {render} from 'preact';
import type {ShopifyGlobal, ProductDetailsConfigurationApi} from '@shopify/ui-extensions/admin';

// Temp hack for global
const shopify: ShopifyGlobal = {...Reflect.get(globalThis, 'shopify')};

const TARGET = 'admin.product-variant-details.configuration.render';

export default shopify.extend(TARGET, (root, api) => {
  // for now, we are grotesquely manually merging extension APIs into the global:
  Object.defineProperties(shopify, Object.getOwnPropertyDescriptors(api));
  render(<Extension />, root);
});

function Extension() {
  const {extension: {target}, i18n} = shopify as unknown as ProductDetailsConfigurationApi<typeof target>;
  return (
    <s-text>
      {i18n.translate('welcome', {target})}
    </s-text>
  );
}
{%- else -%}
import {render} from 'preact';

// Temp hack for global
const shopify = {...Reflect.get(globalThis, 'shopify')};

const TARGET = 'admin.product-variant-details.configuration.render';

export default shopify.extend(TARGET, (root, api) => {
  // for now, we are grotesquely manually merging extension APIs into the global:
  Object.defineProperties(shopify, Object.getOwnPropertyDescriptors(api));
  render(<Extension />, root);
});

function Extension() {
  const {extension: {target}, i18n} = shopify;
  return (
    <s-text>
      {i18n.translate('welcome', {target})}
    </s-text>
  );
}
{%- endif -%}