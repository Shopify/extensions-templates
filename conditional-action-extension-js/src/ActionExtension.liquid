import {render} from 'preact';
import {useEffect, useState} from 'preact/hooks';

export default function extension() {
  render(<Extension />, document.body);
}

function Extension() {
  const {i18n, data, extension: {target}} = shopify;
  console.log({data});
  const [productTitle, setProductTitle] = useState('');
  // Use direct API calls to fetch data from Shopify.
  // See https://shopify.dev/docs/api/admin-graphql for more information about Shopify's GraphQL API
  useEffect(() => {
    (async function getProductInfo() {
      const getProductQuery = {
        query: `query Product($id: ID!) {
          product(id: $id) {
            title
          }
        }`,
        variables: {id: data.selected[0].id},
      };
      // Temporary until 2025-07 is available
      const res = await fetch("shopify:admin/api/2025-04/graphql.json", {
        method: "POST",
        body: JSON.stringify(getProductQuery),
      });

      if (!res.ok) {
        console.error('Network error');
      }

      const productData = await res.json();
      setProductTitle(productData.data.product.title);
    })();
  }, [data.selected]);
  return (
    // The AdminAction component provides an API for setting the title and actions of the Action extension wrapper.
    <s-admin-action>
      <s-stack direction="block">
        {/* Set the translation values for each supported language in the locales directory */}
        <s-text type="strong">{i18n.translate('welcome', {target})}</s-text>
        <s-text>Current product: {productTitle}</s-text>
        <s-button slot="primaryAction" onClick={() => {
            console.log('saving');
            close();
          }}>Done</s-button>
        <s-button slot="secondaryAction" onClick={() => {
            console.log('closing');
            close();
          }}>Close</s-button>
      </s-stack>
    </s-admin-action>
  );
}