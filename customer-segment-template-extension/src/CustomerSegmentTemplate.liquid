{%- if flavor contains "react" -%}
import {
  reactExtension,
  CustomerSegmentTemplate,
} from '@shopify/ui-extensions-react/admin';

// The target used here must match the target used in the extension's toml file (./shopify.extension.toml)
const TARGET = 'admin.customers.segmentation-templates.render';

export default reactExtension(TARGET, () => <App />);

function App() {
  const query = 'number_of_orders = 1 AND products_purchased(id: (product_id)) = true';
  const queryToInsert = 'number_of_orders = 1 AND products_purchased(id: (';

  return (
    // The CustomerSegmentTemplate component provides an API for setting the title, description, date, query, and query to insert of the segmentation template.
    // The title and description do not need to be explicitly set as they will be obtained from the extension's configuration file (TOML).
    <CustomerSegmentTemplate
        createdOn={new Date('2023-08-15').toISOString()}
        query={query}
        queryToInsert={queryToInsert}
    />
  );
}

{%- else -%}
import { extend, CustomerSegmentTemplate } from "@shopify/ui-extensions/admin";

// The target used here must match the target used in the extension's toml file (./shopify.extension.toml)
// The second argument to the render callback provides access to several useful APIs like i18n.
extend("admin.customers.segmentation-templates.render", (root) => {
  root.appendChild(
    root.createComponent(
      // The CustomerSegmentTemplate component provides an API for setting the title, description, date, query, and query to insert of the segmentation template.
      // The title and description do not need to be explicitly set as they will be obtained from the extension's configuration file (TOML).
      CustomerSegmentTemplate,
      {
        createdOn: new Date('2023-08-15').toISOString(),
        query: 'number_of_orders = 1 AND products_purchased(id: (product_id)) = true',
        queryToInsert: 'number_of_orders = 1 AND products_purchased(id: (',
      }
    )
  );
});
{%- endif -%}
