name: Validate TS Functions

on:
  pull_request:
    branches: ["main"]
    paths:
      - "functions-*-js/**"
      - "package.json"
      - ".github/workflows/validate-ts-functions.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install node dependencies
        run: yarn
      - name: Expand liquid for TypeScript functions
        run: CI=1 yarn expand-liquid typescript
      - name: Install workspace dependencies
        run: yarn
      - name: Generate types
        run: yarn js-typegen
      - name: Test
        run: yarn js-test
      - name: Build functions to WASM
        run: |
          for function_dir in functions-*-js; do
            if [ -d "$function_dir" ]; then
              echo "Building $function_dir"
              cd "$function_dir"
              if [ -f "package.json" ]; then
                npm run build
              fi
              cd ..
            fi
          done
      - name: Install function-runner
        run: |
          # Install from source since binary releases have naming issues
          cargo install --git https://github.com/Shopify/function-runner.git function-runner --locked
          # Move to current directory for easier access
          cp ~/.cargo/bin/function-runner .
      - name: Run integration tests
        run: |
          # Create empty JSON input
          echo '{}' > empty_input.json
          
          for function_dir in functions-*-js; do
            if [ -d "$function_dir" ]; then
              echo "Testing $function_dir"
              cd "$function_dir"
              
              # Find the built wasm file
              wasm_file=$(find . -name "*.wasm" | head -1)
              
              if [ -f "$wasm_file" ]; then
                echo "Running integration test for $function_dir"
                ../function-runner -f "$wasm_file" -i "../empty_input.json" > actual_output.json
                
                # Validate output is valid JSON
                if jq empty actual_output.json 2>/dev/null; then
                  echo "✅ $function_dir produced valid JSON output"
                  cat actual_output.json
                else
                  echo "❌ $function_dir produced invalid JSON output"
                  cat actual_output.json
                  exit 1
                fi
              else
                echo "❌ No wasm file found for $function_dir"
                exit 1
              fi
              
              cd ..
            fi
          done
